@page "/"
@inject HttpClient HttpClient
@implements IDisposable

@using System.Reactive.Linq
@using System.Reactive.Subjects
@using ImageViewer.Model

<h4>Image viewer</h4>

<div class="input-group mb-3">
    <input @oninput="OnKeywordChanged"
            type="text"
            class="form-control"
            placeholder="keywords">
</div>

    @if (_isLoading)
    {
        <div class="loader"></div>
    }
    else
    {
        @if (_imageData != null)
        {
            <div id="result">
                @foreach (var photo in _imageData.photos.photo)
                {
                    <img width="120"
                         height="120"
                         src="@photo.Url"/>
                }
            </div>
        }
    }

<style>
    #result {
        display: grid;
        grid-auto-rows: 124px;
        grid-template-columns: repeat(auto-fill, 124px);
    }
</style>

@code
{
    private ImageLoader _imageLoader;
    private ImageData _imageData;

    private Subject<string> _keyword;

    private bool _isLoading;

    private async Task SearchAsync(string keywords)
    {
        _imageData = null;
        _isLoading = true;
        StateHasChanged();

        string currentKeywords;

        do
        {
            if (string.IsNullOrWhiteSpace(keywords))
            {
                _imageData = null;
                break;
            }

            currentKeywords = keywords;

            _imageData = await _imageLoader.LoadAsync(keywords).ConfigureAwait(false);

        } while (currentKeywords != keywords);

        _isLoading = false;
        StateHasChanged();
    }

    private void OnKeywordChanged(ChangeEventArgs e)
    {
        _keyword.OnNext(e.Value.ToString());
    }

    protected override void OnInitialized()
    {
        _imageLoader = new ImageLoader(HttpClient);

        _keyword = new Subject<string>();
        _keyword.Throttle(TimeSpan.FromMilliseconds(300))
            .Subscribe(x => SearchAsync(x));
    }

    public void Dispose()
    {
        _keyword.Dispose();
    }
}